<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Qiuyi&#39;s Blog</title>
  
  <subtitle>Researcher✨Qiuyi Wu</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://qiuyiwu.github.io/"/>
  <updated>2019-04-29T02:05:29.979Z</updated>
  <id>https://qiuyiwu.github.io/</id>
  
  <author>
    <name>Qiuyi Wu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Bayesian Decision Theory Notes</title>
    <link href="https://qiuyiwu.github.io/2019/03/29/DecisionTheory/"/>
    <id>https://qiuyiwu.github.io/2019/03/29/DecisionTheory/</id>
    <published>2019-03-29T05:12:47.000Z</published>
    <updated>2019-04-29T02:05:29.979Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Deep gratitude to Prof. Ed George, who opened a door to the world of emperical bayes for me, I began to read Prof. Jim Berger’s book &lt;a href=&quot;https://www.springer.com/us/book/9780387960982&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Statistical Decision Theory and Bayesian Analysis&lt;/em&gt;&lt;/a&gt; (1985). Here I mainly focus on Chapter 1, 3, 4, 5 of Jim’s book and also share some thoughts on Ed’s paper &lt;a href=&quot;https://projecteuclid.org/euclid.aos/1176349849&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Minimax Multiple Shrinkage Estimation&lt;/em&gt;&lt;/a&gt; (1986). &lt;/p&gt;
&lt;h1 id=&quot;Why-Bayesian&quot;&gt;&lt;a href=&quot;#Why-Bayesian&quot; class=&quot;headerlink&quot; title=&quot;Why Bayesian?&quot;&gt;&lt;/a&gt;Why Bayesian?&lt;/h1&gt;&lt;p&gt;Different people would have different conclusions based on their prior beliefs of the plausibility of the event, Baysian analysis is to seek to utilize prior information.&lt;br&gt;
    
    </summary>
    
      <category term="Statistics" scheme="https://qiuyiwu.github.io/categories/Statistics/"/>
    
    
      <category term="Statistics" scheme="https://qiuyiwu.github.io/tags/Statistics/"/>
    
      <category term="Minimax" scheme="https://qiuyiwu.github.io/tags/Minimax/"/>
    
      <category term="Decision Theory" scheme="https://qiuyiwu.github.io/tags/Decision-Theory/"/>
    
      <category term="Bayesian Analysis" scheme="https://qiuyiwu.github.io/tags/Bayesian-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Agent-based Modeling Wrap-up</title>
    <link href="https://qiuyiwu.github.io/2019/03/13/ABM/"/>
    <id>https://qiuyiwu.github.io/2019/03/13/ABM/</id>
    <published>2019-03-13T23:05:14.000Z</published>
    <updated>2019-03-29T05:16:45.208Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;I attended the &lt;a href=&quot;https://www.samsi.info/programs-and-activities/year-long-research-programs/model-uncertainty-mathematical-statistical-mums/agent-based-modeling-workshop-march-11-12-2019/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SAMSI Agent-based Modeling Workshop&lt;/a&gt; in Duke University on March 11-12, 2019. As one of the youngest attendants I would like to share some of the limelights discussed in this workshop. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Agent-based modeling is widely used across many disciplines to study complex emergent behavior generated from simulated entities that interact with each other and their environment according to relatively simple rules. Applications include automobile traffic modeling, weather forecasting, and the study of epidemics. The inferential challenge of agent-based models is that (in general) there is no tractable likelihood function, and thus it is difficult to fit the model or make quantified statements about the accuracy of predictions. This workshop addressed that challenge from the perspective of uncertainty quantification, so that emulator methodology could be used to make approximate principled inferences about agent-based simulations.&lt;br&gt;
    
    </summary>
    
      <category term="Conference" scheme="https://qiuyiwu.github.io/categories/Conference/"/>
    
    
      <category term="Agent-based Modeling" scheme="https://qiuyiwu.github.io/tags/Agent-based-Modeling/"/>
    
      <category term="SAMSI" scheme="https://qiuyiwu.github.io/tags/SAMSI/"/>
    
      <category term="Statistics" scheme="https://qiuyiwu.github.io/tags/Statistics/"/>
    
  </entry>
  
  <entry>
    <title>Bayesian Nonparametrics Notes</title>
    <link href="https://qiuyiwu.github.io/2019/03/07/BayesianNonparametrics/"/>
    <id>https://qiuyiwu.github.io/2019/03/07/BayesianNonparametrics/</id>
    <published>2019-03-07T16:36:37.000Z</published>
    <updated>2019-03-10T17:54:50.865Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;The note is partially based on the Bayesian Nonparametrics Machine Learning lectures by Yee Whye Teh at Max Planck Institute for Intelligent Systems in Tübingen, Germany. &lt;/p&gt;
&lt;p&gt;Machine learning is all about data, and the uncertainty and complex process in the data. Probability theory is a rich language to express uncertainties. Graphical tool and complex models are develped to help visualize and derive algorithmic solutions.&lt;br&gt;
    
    </summary>
    
      <category term="Statistics" scheme="https://qiuyiwu.github.io/categories/Statistics/"/>
    
    
      <category term="Statistics" scheme="https://qiuyiwu.github.io/tags/Statistics/"/>
    
      <category term="Nonparametric" scheme="https://qiuyiwu.github.io/tags/Nonparametric/"/>
    
      <category term="Chinese Restaurant" scheme="https://qiuyiwu.github.io/tags/Chinese-Restaurant/"/>
    
      <category term="Indian Buffet" scheme="https://qiuyiwu.github.io/tags/Indian-Buffet/"/>
    
  </entry>
  
  <entry>
    <title>Why are Gaussian Process Models called Nonparametric?</title>
    <link href="https://qiuyiwu.github.io/2019/02/19/GaussianProcess/"/>
    <id>https://qiuyiwu.github.io/2019/02/19/GaussianProcess/</id>
    <published>2019-02-19T17:56:54.000Z</published>
    <updated>2019-02-20T00:18:29.818Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;As we know, &lt;a href=&quot;https://en.wikipedia.org/wiki/Gaussian_process&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Gaussian processes&lt;/a&gt; modeling is often refer to as nonparametric modeling. But why? It has parameters in its covariance kernel:&lt;br&gt;&lt;span&gt;$$\begin{align*}
K(x_i,x_j) = h^2\text{exp}\left(\frac{-(x_i-x_j)^2}{\lambda^2}\right)
\end{align*}$$&lt;/span&gt;&lt;!-- Has MathJax --&gt;&lt;br&gt;From the example of Gaussian kernel above, $h$ and $\lambda$ are the hyperparameters.&lt;br&gt;
    
    </summary>
    
      <category term="Statistics" scheme="https://qiuyiwu.github.io/categories/Statistics/"/>
    
    
      <category term="Nonparametric" scheme="https://qiuyiwu.github.io/tags/Nonparametric/"/>
    
      <category term="Gaussian Process" scheme="https://qiuyiwu.github.io/tags/Gaussian-Process/"/>
    
  </entry>
  
  <entry>
    <title>Make a Birthday Cake in R</title>
    <link href="https://qiuyiwu.github.io/2019/01/28/Birthday/"/>
    <id>https://qiuyiwu.github.io/2019/01/28/Birthday/</id>
    <published>2019-01-29T05:57:40.000Z</published>
    <updated>2019-01-30T06:21:26.579Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Today is my friend’s BIG DAY! Happy Birthday!!! He is one of the four people who changed my life (yes four people have seminal impact in my life so far). I want to thank him for all the things he has done for me and all the opportunites he gave me. So I decide to make a birthday cake for him. &lt;/p&gt;
&lt;p&gt;Here it is!!!&lt;br&gt;
    
    </summary>
    
      <category term="JUJUs" scheme="https://qiuyiwu.github.io/categories/JUJUs/"/>
    
    
      <category term="Birthday" scheme="https://qiuyiwu.github.io/tags/Birthday/"/>
    
      <category term="R" scheme="https://qiuyiwu.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>Blog Theme 日神 x 酒神</title>
    <link href="https://qiuyiwu.github.io/2019/01/27/BlogTheme/"/>
    <id>https://qiuyiwu.github.io/2019/01/27/BlogTheme/</id>
    <published>2019-01-28T03:12:19.000Z</published>
    <updated>2019-01-28T16:38:10.412Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;My current blog theme is 日神 x 酒神 (Apollinian and Dionysian). &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Apollo:&lt;/strong&gt; the God of the sun, truth, light, and logic, is the namesake for the first, ordered, half. This is the half that covers everything which is structured.&lt;br&gt;&lt;strong&gt;Dionysus:&lt;/strong&gt; the God of wine, festivals, and madness lends his name to the later, frenzied, half. The Dionysian doesn’t categorize and tends to blur the boundaries between the self and nature with emotion.&lt;/p&gt;
&lt;p&gt;I consent Nietzsche’s idea that we need both in our life to be complete people. The fusion of these two drives allows the tremendous frenzied energy of the Dionysian to be applied constructively inside an Apollonian framework.&lt;/p&gt;
    
    </summary>
    
      <category term="Philosophy" scheme="https://qiuyiwu.github.io/categories/Philosophy/"/>
    
    
      <category term="Philosophy" scheme="https://qiuyiwu.github.io/tags/Philosophy/"/>
    
      <category term="Nietzsche" scheme="https://qiuyiwu.github.io/tags/Nietzsche/"/>
    
      <category term="尼采" scheme="https://qiuyiwu.github.io/tags/%E5%B0%BC%E9%87%87/"/>
    
  </entry>
  
  <entry>
    <title>Add Article Views to Your Hexo Blog</title>
    <link href="https://qiuyiwu.github.io/2019/01/26/Hexo-View/"/>
    <id>https://qiuyiwu.github.io/2019/01/26/Hexo-View/</id>
    <published>2019-01-26T13:35:49.000Z</published>
    <updated>2019-01-28T16:04:08.635Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;When we write articles, we always want to know the popularity of our work. As a &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt; blogger, I tried several different visitor counter system and here, like the previous post, I will summarize two options for visitor counts to each articles. But this time, I have preference to a specific one. Guess which one?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Option 1: LeanCloud Counter &lt;/li&gt;
&lt;li&gt;Option 2: Firestore Counter&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;LeanCloud-Counter&quot;&gt;&lt;a href=&quot;#LeanCloud-Counter&quot; class=&quot;headerlink&quot; title=&quot;LeanCloud Counter&quot;&gt;&lt;/a&gt;LeanCloud Counter&lt;/h2&gt;&lt;p&gt;LeanCloud is a Chinese friendly system, and unfortunately it doesn’t have English version. Here I’ll try to make it as clear as possible. For those who’ve read the previous post, it is not hard for you to find out &lt;strong&gt;Valine Comment&lt;/strong&gt; actually use &lt;strong&gt;LeanCloud&lt;/strong&gt; system so if you already have &lt;strong&gt;Valine&lt;/strong&gt;, you don’t need to create the account again.&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://qiuyiwu.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://qiuyiwu.github.io/tags/Hexo/"/>
    
      <category term="blog" scheme="https://qiuyiwu.github.io/tags/blog/"/>
    
      <category term="Firestore" scheme="https://qiuyiwu.github.io/tags/Firestore/"/>
    
      <category term="Firebase" scheme="https://qiuyiwu.github.io/tags/Firebase/"/>
    
      <category term="LeanCloud" scheme="https://qiuyiwu.github.io/tags/LeanCloud/"/>
    
      <category term="visitor counts" scheme="https://qiuyiwu.github.io/tags/visitor-counts/"/>
    
  </entry>
  
  <entry>
    <title>Add Comments Section to Your Hexo Blog</title>
    <link href="https://qiuyiwu.github.io/2019/01/25/Hexo-Comment/"/>
    <id>https://qiuyiwu.github.io/2019/01/25/Hexo-Comment/</id>
    <published>2019-01-25T20:31:19.000Z</published>
    <updated>2019-01-27T16:54:04.575Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Hexo as a static site generator has become a popular choice for bloggers. When using something like WordPress or Medium you get a comment section out of the box sponstaneously, it is not as straightforward in a static environment. In this article, I will summarize two options to provide your audience with a way to leave a comment.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Option 1: Disqus Comment&lt;/li&gt;
&lt;li&gt;Option 2: Valine Comment&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Disque-Comment&quot;&gt;&lt;a href=&quot;#Disque-Comment&quot; class=&quot;headerlink&quot; title=&quot;Disque Comment&quot;&gt;&lt;/a&gt;Disque Comment&lt;/h2&gt;&lt;p&gt;Disqus Comment is a great way to let people comment on your articles. Disqus has automatic setup for nearly every Content Management System (CMS) except Hexo.  Here is the easy way to set this up:&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://qiuyiwu.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://qiuyiwu.github.io/tags/Hexo/"/>
    
      <category term="comment" scheme="https://qiuyiwu.github.io/tags/comment/"/>
    
      <category term="Disqus" scheme="https://qiuyiwu.github.io/tags/Disqus/"/>
    
      <category term="Valine" scheme="https://qiuyiwu.github.io/tags/Valine/"/>
    
      <category term="blog" scheme="https://qiuyiwu.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Create Local Search for Your Hexo Blog</title>
    <link href="https://qiuyiwu.github.io/2019/01/25/Hexo-LocalSearch/"/>
    <id>https://qiuyiwu.github.io/2019/01/25/Hexo-LocalSearch/</id>
    <published>2019-01-25T16:17:48.000Z</published>
    <updated>2019-01-28T04:41:17.970Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;I created my blog with &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt; and in this article I’ll talk about how to create Local Search with &lt;a href=&quot;https://github.com/wzpan/hexo-generator-search&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-generator-search plugin&lt;/a&gt;. I use &lt;a href=&quot;https://github.com/theme-next&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-theme-next&lt;/a&gt; version 5.1.4. (for the previous version &lt;strong&gt;localsearch.swig&lt;/strong&gt; file needs to be modified.) &lt;/p&gt;
&lt;h2 id=&quot;Install-Plugin&quot;&gt;&lt;a href=&quot;#Install-Plugin&quot; class=&quot;headerlink&quot; title=&quot;Install Plugin&quot;&gt;&lt;/a&gt;Install Plugin&lt;/h2&gt;&lt;p&gt;First, install &lt;a href=&quot;https://github.com/wzpan/hexo-generator-search&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-generator-search plugin&lt;/a&gt; plugin by the command below:&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-search --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Then configure this plugin in &lt;strong&gt;_config.yml&lt;/strong&gt; file of your theme.
    
    </summary>
    
      <category term="Hexo" scheme="https://qiuyiwu.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://qiuyiwu.github.io/tags/Hexo/"/>
    
      <category term="blog" scheme="https://qiuyiwu.github.io/tags/blog/"/>
    
      <category term="local search" scheme="https://qiuyiwu.github.io/tags/local-search/"/>
    
  </entry>
  
  <entry>
    <title>Reading Notes for Astrostatistics</title>
    <link href="https://qiuyiwu.github.io/2018/12/24/NoteAstro/"/>
    <id>https://qiuyiwu.github.io/2018/12/24/NoteAstro/</id>
    <published>2018-12-24T19:41:01.000Z</published>
    <updated>2018-12-31T05:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;I’m starting to read Feigelson &amp;amp; Babu’s &lt;em&gt;Modern Statistical Methods for Astronomy&lt;/em&gt; this Christmas and hope to finish it before Spring break in March, 2019. This book covers the fundamental statistics theories and methodologies in application on Astronomy. It also aims to help astronomers perceive megadatas from celestial objects via modern statistical analysis and interpret cosmic phenomena in advanced statistical language. It is the bible for Astrostatistics! I take notes and record here for myself better understanding this fantastic field. &lt;/p&gt;
&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;Collaborations betweeen astronomers and statisticians:&lt;br&gt;&lt;a href=&quot;http://hea-www.harvard.edu/AstroStat&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;California–Harvard Astro-Statistical Collaboration&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.incagroup.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;International Computational Astrostatistics Group centered in Pittsburgh&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://astrostatistics.psu.edu&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Center for Astrostatistics at Penn State&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Statistics" scheme="https://qiuyiwu.github.io/categories/Statistics/"/>
    
    
      <category term="Statistics" scheme="https://qiuyiwu.github.io/tags/Statistics/"/>
    
      <category term="Astrostatistics" scheme="https://qiuyiwu.github.io/tags/Astrostatistics/"/>
    
      <category term="Astronomy" scheme="https://qiuyiwu.github.io/tags/Astronomy/"/>
    
  </entry>
  
  <entry>
    <title>Data Fusion</title>
    <link href="https://qiuyiwu.github.io/2018/12/20/DataFusion/"/>
    <id>https://qiuyiwu.github.io/2018/12/20/DataFusion/</id>
    <published>2018-12-20T19:47:15.000Z</published>
    <updated>2019-02-26T19:04:08.028Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;center&gt;&lt;br&gt;Ongoing resaerch projects in SAMSI Program on Model Uncertainty.&lt;br&gt;To be announced in May, 2019.&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Summary:&lt;br&gt;In fall 2018, I presented my previous work (collaborating with Ernest Fokoue) about music mining in the group meeting, and also submitted a paper [1] to introduce the idea of representing any given piece of music as a collection of “musical words” that we codenamed “muselets”, which are essentially musical words of various lengths. We specifically herein construct a naive dictionary featuring a corpus made up of African American, Chinese, Japanese and Arabic music, on which we perform both topic modelling and pattern recognition. Although some of the results based on the Naive Dictionary are reasonably good, we anticipate phenomenal predictive performances once we get around to actually building a full scale complete version of our intended dictionary of muselets. The idea of Data Fusion in this work is that we create uniform representation of music based on different sources and forms of musical data.&lt;br&gt;
    
    </summary>
    
      <category term="Research" scheme="https://qiuyiwu.github.io/categories/Research/"/>
    
    
      <category term="Data Fusion" scheme="https://qiuyiwu.github.io/tags/Data-Fusion/"/>
    
  </entry>
  
  <entry>
    <title>Music Mining</title>
    <link href="https://qiuyiwu.github.io/2018/12/20/MusicMining/"/>
    <id>https://qiuyiwu.github.io/2018/12/20/MusicMining/</id>
    <published>2018-12-20T19:40:32.000Z</published>
    <updated>2019-01-26T15:16:49.054Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Music and text are similar in the way that both of them can be regraded as information carrier and emotion deliverer. People get daily information from reading newspaper, magazines, blogs etc., and they can also write diary or personal journal to reflect on daily life, let out pent up emotions, record ideas and experience. Same power could come from music! Composers express their feelings through music with different combinations of notes, diverse tempo, and dynamics levels, as another version of language. All these similarities drive people to ask questions like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Could music deliver information tantamount to text?&lt;/li&gt;
&lt;li&gt;Can we efficiently use text mining approach in music field?&lt;/li&gt;
&lt;li&gt;Why music from diverse culture can bring people so many different feelings?&lt;/li&gt;
&lt;li&gt;What’s the similarity between music from different culture, or composers, or genres?&lt;/li&gt;
&lt;li&gt;To what extend do people grasp the meaning behind each piece of music expressed by the composer?&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Research" scheme="https://qiuyiwu.github.io/categories/Research/"/>
    
    
      <category term="music" scheme="https://qiuyiwu.github.io/tags/music/"/>
    
      <category term="Data Mining" scheme="https://qiuyiwu.github.io/tags/Data-Mining/"/>
    
      <category term="Topic Modeling" scheme="https://qiuyiwu.github.io/tags/Topic-Modeling/"/>
    
  </entry>
  
  <entry>
    <title>Storm Surge</title>
    <link href="https://qiuyiwu.github.io/2018/12/19/StormSurge/"/>
    <id>https://qiuyiwu.github.io/2018/12/19/StormSurge/</id>
    <published>2018-12-20T03:19:21.000Z</published>
    <updated>2019-01-26T15:26:00.176Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;center&gt;&lt;br&gt;Ongoing resaerch projects in SAMSI Program on Model Uncertainty.&lt;br&gt;To be announced in May, 2019.&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Mid-term summary:&lt;br&gt;In fall 2018, I mainly focused on input distribution subgroup demonstrated my initial exploratory analysis of KE synthetic storm tracks, and compared the simulated tracks with the real IBTrack storm data. One of the main discussions in this semester is how to improve the current practice with the technique of spatial statistics, such as using hierarchical model to improve the estimation of input distribution, or spatial-temporal point process modeling for the storm occurrence rate. Diverse existing projects giving by different researchers are shared and discussed in weekly group meetings.&lt;br&gt;For spring 2019, we will (1.) Measure the model of storm evolution (e.g. the sudden change of the characteristics when the storms landed based on the coastline and how simulation data handle this); (2.) Think about how to impose some structure to improve the estimation concerning input distribution.&lt;/p&gt;
    
    </summary>
    
      <category term="Research" scheme="https://qiuyiwu.github.io/categories/Research/"/>
    
    
      <category term="Statistics" scheme="https://qiuyiwu.github.io/tags/Statistics/"/>
    
      <category term="storm surge" scheme="https://qiuyiwu.github.io/tags/storm-surge/"/>
    
      <category term="Spatial Statistics" scheme="https://qiuyiwu.github.io/tags/Spatial-Statistics/"/>
    
      <category term="hurrican tracks" scheme="https://qiuyiwu.github.io/tags/hurrican-tracks/"/>
    
  </entry>
  
  <entry>
    <title>Research on Public Policy Blogs</title>
    <link href="https://qiuyiwu.github.io/2018/06/05/Public-Policy-Blogs/"/>
    <id>https://qiuyiwu.github.io/2018/06/05/Public-Policy-Blogs/</id>
    <published>2018-06-05T15:03:24.000Z</published>
    <updated>2019-01-26T15:17:27.194Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Use different Topic Modeling approaches on Political Blogs to see the performance of diverse methods.&lt;/p&gt;
&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;h2 id=&quot;Types-of-Models-in-Comparison&quot;&gt;&lt;a href=&quot;#Types-of-Models-in-Comparison&quot; class=&quot;headerlink&quot; title=&quot;Types of Models in Comparison&quot;&gt;&lt;/a&gt;Types of Models in Comparison&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;General LDA (&lt;a href=&quot;https://cran.r-project.org/web/packages/lda/lda.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;R package&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Supervised LDA (&lt;a href=&quot;https://arxiv.org/pdf/1003.0783.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;David M. Blei, Jon D. McAuliffe&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Relational Topic Model (&lt;a href=&quot;http://proceedings.mlr.press/v5/chang09a/chang09a.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jonathan Chang, David M. Blei&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Topic Link Block Model (Derek Owens-Oas)&lt;/li&gt;
&lt;li&gt;Poisson Factor Modeling (&lt;a href=&quot;http://people.ee.duke.edu/~lcarin/Mingyuan_PAMI_6.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Beta Negative Binomial Process Topic Model&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Dynamic Text Network Model (&lt;a href=&quot;https://arxiv.org/pdf/1610.05756.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Teague Henry, David Banks et al.&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Research" scheme="https://qiuyiwu.github.io/categories/Research/"/>
    
    
      <category term="Topic Modeling" scheme="https://qiuyiwu.github.io/tags/Topic-Modeling/"/>
    
      <category term="Network Analysis" scheme="https://qiuyiwu.github.io/tags/Network-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow for Deep Learning 3</title>
    <link href="https://qiuyiwu.github.io/2018/01/22/TensorFlow-for-Deep-Learning-3/"/>
    <id>https://qiuyiwu.github.io/2018/01/22/TensorFlow-for-Deep-Learning-3/</id>
    <published>2018-01-23T01:44:46.000Z</published>
    <updated>2019-03-08T15:48:42.594Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Continue the learning process of Convolutional Neural Networks and Recurrent Neural Networks with TensorFlow in Jupyter Notebook.&lt;/p&gt;
&lt;h1 id=&quot;RNN-with-TensorFlow&quot;&gt;&lt;a href=&quot;#RNN-with-TensorFlow&quot; class=&quot;headerlink&quot; title=&quot;RNN with TensorFlow&quot;&gt;&lt;/a&gt;RNN with TensorFlow&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; tensorflow &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; tf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%matplotlib inline&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# class: create the data, generate the batches to send it back&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TimeSeriesData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, num_points, xmin, xmax)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.xmin = xmin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.xmax = xmax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.num_points = num_points&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.resolution = (xmax - xmin)/num_points&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.x_data = np.linspace(xmin, xmax, num_points)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.y_true = np.sin(self.x_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ret_true&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, x_series)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; np.sin(x_series)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;next_batch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, batch_size, steps, return_batch_ts = False)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# grab a random starting point for each batch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        random_start = np.random.rand(batch_size,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# convert the data to TS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ts_start = random_start * (self.xmax - self.xmin - (steps * self.resolution))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# create batch time series on the x axis&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        batch_ts = ts_start + np.arange(&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;,steps+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) * self.resolution&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# create the Y data for the time series x axis from previous step&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        y_batch = np.sin(batch_ts)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# formatting for RNN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; return_batch_ts:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; y_batch[:,:&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;].reshape(&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,steps,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), y_batch[:,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:].reshape(&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,steps,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), batch_ts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; y_batch[:,:&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;].reshape(&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,steps,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), y_batch[:,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:].reshape(&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,steps,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;# original y_batch and y_batch shifted over 1 step in the future&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="TensorFlow" scheme="https://qiuyiwu.github.io/categories/TensorFlow/"/>
    
    
      <category term="CNN" scheme="https://qiuyiwu.github.io/tags/CNN/"/>
    
      <category term="RNN" scheme="https://qiuyiwu.github.io/tags/RNN/"/>
    
      <category term="API" scheme="https://qiuyiwu.github.io/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow for Deep Learning 2</title>
    <link href="https://qiuyiwu.github.io/2018/01/21/TensorFlow-for-Deep-Learning-2/"/>
    <id>https://qiuyiwu.github.io/2018/01/21/TensorFlow-for-Deep-Learning-2/</id>
    <published>2018-01-21T18:50:21.000Z</published>
    <updated>2019-01-26T15:18:30.832Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Here I’ll give the theory part of Neural Networks, sepecifically three kinds of NN: Normal Neural Networks, Convolutional Neural Networks, Recurrent Neural Networks. &lt;/p&gt;
&lt;h1 id=&quot;Neural-Networks&quot;&gt;&lt;a href=&quot;#Neural-Networks&quot; class=&quot;headerlink&quot; title=&quot;Neural Networks&quot;&gt;&lt;/a&gt;Neural Networks&lt;/h1&gt;&lt;h2 id=&quot;In-single-neuron&quot;&gt;&lt;a href=&quot;#In-single-neuron&quot; class=&quot;headerlink&quot; title=&quot;In single neuron:&quot;&gt;&lt;/a&gt;In single neuron:&lt;/h2&gt;&lt;span&gt;$$\begin{align*}
z &amp;amp;= Wx + b \\
a &amp;amp;= \sigma (z)
\end{align*}$$&lt;/span&gt;&lt;!-- Has MathJax --&gt;
&lt;h2 id=&quot;Activation-Function&quot;&gt;&lt;a href=&quot;#Activation-Function&quot; class=&quot;headerlink&quot; title=&quot;Activation Function&quot;&gt;&lt;/a&gt;Activation Function&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Perceptron:&lt;/strong&gt; binary classifier, small changes are not reflected.&lt;span&gt;$$\begin{align*}
f(x) = \begin{cases}
1 &amp;amp; \text{if } Wx+b&amp;gt;0\\ 
0 &amp;amp; \text{otherwise}
\end{cases}
\end{align*}$$&lt;/span&gt;&lt;!-- Has MathJax --&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="TensorFlow" scheme="https://qiuyiwu.github.io/categories/TensorFlow/"/>
    
    
      <category term="TensorFlow" scheme="https://qiuyiwu.github.io/tags/TensorFlow/"/>
    
      <category term="DNN" scheme="https://qiuyiwu.github.io/tags/DNN/"/>
    
      <category term="CNN" scheme="https://qiuyiwu.github.io/tags/CNN/"/>
    
      <category term="RNN" scheme="https://qiuyiwu.github.io/tags/RNN/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow for Deep Learning 1</title>
    <link href="https://qiuyiwu.github.io/2018/01/16/Tensorflow-for-Deep-Learning-1/"/>
    <id>https://qiuyiwu.github.io/2018/01/16/Tensorflow-for-Deep-Learning-1/</id>
    <published>2018-01-16T23:04:34.000Z</published>
    <updated>2019-01-26T15:18:12.322Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;I’m learning how to use Google’s TensorFlow framework to create artificial neural networks for deep learning with Python from Udemy. I’m using Jupiter notebook to practice and blog my learning progress here.&lt;/p&gt;
&lt;p&gt;TensorFlow is an open source software library for numerical computation using data flow graphs. Nodes in the graph represent mathematical operations, while the graph edges represent the multidimensional data arrays (tensors) communicated between them. This architecture allows users to deploy computation to one or more CPUs or GPUs, in a desktop, server, or mobile device with a single API (Application programming interface).&lt;/p&gt;
    
    </summary>
    
      <category term="TensorFlow" scheme="https://qiuyiwu.github.io/categories/TensorFlow/"/>
    
    
      <category term="TensorFlow" scheme="https://qiuyiwu.github.io/tags/TensorFlow/"/>
    
      <category term="Deep Learning" scheme="https://qiuyiwu.github.io/tags/Deep-Learning/"/>
    
      <category term="Python" scheme="https://qiuyiwu.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode in Python3 - Two Sum</title>
    <link href="https://qiuyiwu.github.io/2018/01/09/LeetCode1/"/>
    <id>https://qiuyiwu.github.io/2018/01/09/LeetCode1/</id>
    <published>2018-01-09T21:48:51.000Z</published>
    <updated>2018-12-19T19:47:00.598Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;As a graduate student in Statistics, I profoundly believe the power of programming skills to Statistics/ Data Science. I used R or Matlab as my default programming tools and they are pretty powerful to help me solve most mathematical related tasks. However I realize in Artificial Intelligence/ Machine Learning realm, Python is more prevelent. In order to better gain the gist of this mighty programming language, in the process of learning it, I will show my LeetCode practice in Python3 with relative explanations as well as pitfalls I encounter.&lt;br&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://qiuyiwu.github.io/categories/LeetCode/"/>
    
    
      <category term="TwoSum" scheme="https://qiuyiwu.github.io/tags/TwoSum/"/>
    
  </entry>
  
  <entry>
    <title>Data Mining Note 3 - K Nearest Neighbors</title>
    <link href="https://qiuyiwu.github.io/2018/01/06/Data-Mining-Note3/"/>
    <id>https://qiuyiwu.github.io/2018/01/06/Data-Mining-Note3/</id>
    <published>2018-01-06T16:37:58.000Z</published>
    <updated>2019-01-26T15:12:41.360Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;This chapter talks about k Nearest Neighbors (kNN) as a metholodogy for both classification and regression problems. The kNN method serves a basic and easy to understand foundational machine learning and data mining technique. The kNN method is an excellent baseline machine learning technique, and also allows many extensions. It usually performs reasonable well or sometimes very well when compared to more sophisticated techniques.&lt;/p&gt;
&lt;p&gt;kNN classification basically means the estimated class of a vector $\mathbf{x}$ is the most frequent class label in the neighborhood of $\mathbf{x}$. kNN classifiers are inherently naturally multi-class, and are used extensively in applications such as image processing, character recognition and general pattern recognition tasks. For kNN regression, the estimated response value of a vector $\mathbf{x}$ is the average of the response values in the neighborhood of $\mathbf{x}$.&lt;br&gt;
    
    </summary>
    
      <category term="Data Mining" scheme="https://qiuyiwu.github.io/categories/Data-Mining/"/>
    
    
      <category term="kNN" scheme="https://qiuyiwu.github.io/tags/kNN/"/>
    
      <category term="Classification" scheme="https://qiuyiwu.github.io/tags/Classification/"/>
    
      <category term="Regression" scheme="https://qiuyiwu.github.io/tags/Regression/"/>
    
      <category term="Distance" scheme="https://qiuyiwu.github.io/tags/Distance/"/>
    
  </entry>
  
  <entry>
    <title>Data Mining Note 2 - Binary Classification</title>
    <link href="https://qiuyiwu.github.io/2018/01/05/Data-Mining-Note2/"/>
    <id>https://qiuyiwu.github.io/2018/01/05/Data-Mining-Note2/</id>
    <published>2018-01-06T01:07:53.000Z</published>
    <updated>2019-01-26T15:12:21.039Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;This chapter gives basic introduction of Vapnik-Chervonenkis Theory on Binary Classification. When it comes to binary classification task, we always want to know the functional relationship between $\mathbf{x}$ and $y$, or how to determine the “best” approach to determining from the available observaions such that given a new observation $\mathbf{x}^{new}$, we can predict its class $y^{new}$ as accurately as possible.&lt;/p&gt;
&lt;h3 id=&quot;Universal-Best&quot;&gt;&lt;a href=&quot;#Universal-Best&quot; class=&quot;headerlink&quot; title=&quot;Universal Best&quot;&gt;&lt;/a&gt;Universal Best&lt;/h3&gt;&lt;p&gt;Constructing a classification rule that puts all the points in their corresponding classes could be dangerous for classifying new observations not present in the current collection of observations. So to find an classification rule that achieves the absolute very best on the present data is not enough since infinitely many more observations can be generated. &lt;strong&gt;Even the universally best classifier will make mistakes.&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Data Mining" scheme="https://qiuyiwu.github.io/categories/Data-Mining/"/>
    
    
      <category term="classification" scheme="https://qiuyiwu.github.io/tags/classification/"/>
    
      <category term="Vapnik-Chervonenkis" scheme="https://qiuyiwu.github.io/tags/Vapnik-Chervonenkis/"/>
    
      <category term="binary" scheme="https://qiuyiwu.github.io/tags/binary/"/>
    
  </entry>
  
</feed>
